'''
Реализовать класс Matrix (матрица). Обеспечить перегрузку конструктора класса (метод __init__()),
который должен принимать данные (список списков) для формирования матрицы.
Подсказка: матрица — система некоторых математических величин, расположенных в виде прямоугольной схемы.
Примеры матриц: 3 на 2, 3 на 3, 2 на 4.
Следующий шаг — реализовать перегрузку метода __str__() для вывода матрицы в привычном виде.
Далее реализовать перегрузку метода __add__() для реализации операции сложения двух объектов класса Matrix (двух матриц).
Результатом сложения должна быть новая матрица.
Подсказка: сложение элементов матриц выполнять поэлементно — первый элемент первой строки первой матрицы складываем
с первым элементом первой строки второй матрицы и т.д.
'''
# optimal solution =)
import numpy as np
print(np.array([[1, 2, 3], [4, 5, 6], [7, 8, 9]]) + np.array([[9, 8, 7], [6, 5, 4], [3, 2, 1]]))

# irrational decision =)
class Matrix:
    def __init__(self, matrix):
        self.matrix = matrix

    def __add__(self, other):
        for num in range(len(self.matrix)):
            for num2 in range(len(other.matrix[num])):
                self.matrix[num][num2] += other.matrix[num][num2]
        return self

    def __str__(self):
        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in self.matrix]))


matrix_1 = Matrix([[1, 2, 3], [4, 5, 6], [7, 8, 9]])
matrix_2 = Matrix([[9, 8, 7], [6, 5, 4], [3, 2, 1]])
print(matrix_1 + matrix_2)
